plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}
// java {
//     sourceCompatibility = '17'
// }
// 자바 버전 설정
sourceCompatibility = 17
targetCompatibility = 17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA
    runtimeOnly 'com.mysql:mysql-connector-j' // MySQL 연결
    implementation 'org.springframework.boot:spring-boot-starter-validation' // 유효성 검사
    implementation 'org.springframework.boot:spring-boot-starter-mail' // 메일 인증
    implementation 'org.apache.commons:commons-lang3:3.12.0' // 랜덤 숫자 만들기용
    implementation 'org.springframework.boot:spring-boot-starter-security' // 스프링 시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // 타임리프
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0' // swagger

//    implementation 'org.hibernate:hibernate-core:5.4.33.Final' //hibernate 버전관리

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//    implementation 'org.springframework.security:spring-security-oauth2-client:5.5.2'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1' //json-simple
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.7'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis' // redis


    //querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    implementation 'org.modelmapper:modelmapper:3.2.0'

    implementation 'com.auth0:java-jwt:4.2.1' //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE' //s3

}



tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}
